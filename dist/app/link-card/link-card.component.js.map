{"version":3,"file":"link-card.component.js","sourceRoot":"","sources":["link-card.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA+D,eAAe,CAAC,CAAA;AAC/E,qBAA+B,eAAe,CAAC,CAAA;AAC/C,qBAA+B,eAAe,CAAC,CAAA;AAW/C;IAMI,2BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFpB,cAAS,GAAyB,IAAI,mBAAY,EAAU,CAAC;IAEtC,CAAC;IAElC,oCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QACtC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,IAAY;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,sCAAU,GAAV,UAAW,IAAY;QACnB,IAAI,UAAU,GAAW,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;QAC/E,kCAAkC;QAChC,MAAM,CAAC,UAAU,CAAC;QACpB;;WAEG;IACP,CAAC;IAvBD;QAAC,YAAK,EAAE;;mDAAA;IACR;QAAC,YAAK,EAAE;;sDAAA;IACR;QAAC,aAAM,EAAE;;wDAAA;IAZb;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,0BAA0B;YACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;YACtC,SAAS,EAAG,CAAE,qBAAc,CAAE;SAE/B,CAAC;;yBAAA;IAyCF,wBAAC;AAAD,CAAC,AAxCD,IAwCC;AAxCY,yBAAiB,oBAwC7B,CAAA","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HTTP_PROVIDERS } from '@angular/http';\nimport { Http, Response } from '@angular/http';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'link-card',\n  templateUrl: 'link-card.component.html',\n  styleUrls: ['link-card.component.css'],\n  providers:  [ HTTP_PROVIDERS ]\n\n})\nexport class LinkCardComponent implements OnInit {\n\n    @Input() link: string;\n    @Input() editing: boolean;\n    @Output() on_change: EventEmitter<string> = new EventEmitter<string>();\n\n    constructor(private http: Http) {}\n\n    ngOnInit() {\n        if (!this.link.split(\"/\")[0].endsWith(\":\")) {\n            this.link = \"http://\" + this.link;\n        }\n    }\n    \n    beautify_link(link: string): string {\n        return this.link.split(\"/\")[2];\n    }\n    \n    getFavicon(link: string){\n        let beautified: string = \"http://\" + this.beautify_link(link) + \"/favicon.ico\";\n        /*if(this.isValid(beautified)) {*/\n          return beautified;\n        /*} else { \n          return \"../empty_image.png\";\n        }*/\n    }\n    \n    /*isValid(link: string): boolean{\n        let return_value: boolean = true;\n        this.http.get(link)\n            .subscribe(\n                data => {\n                    return_value = (data.status != 404)\n                },\n                err => console.log(err.json().message),\n                () => console.log('Got info...')\n           ); \n        return !return_value; \n    }*/\n\n}\n"]}