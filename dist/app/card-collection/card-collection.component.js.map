{"version":3,"file":"card-collection.component.js","sourceRoot":"","sources":["card-collection.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\nimport { CardComponent } from '../card';\nimport { HTTP_PROVIDERS } from '@angular/http';\nimport { Http, Response} from '@angular/http';\n\n@Component({\n  moduleId: module.id,\n  selector: 'card-collection',\n  templateUrl: 'card-collection.component.html',\n  styleUrls: ['card-collection.component.css'],\n  directives: [CardComponent],\n  providers:  [ HTTP_PROVIDERS ]\n})\nexport class CardCollectionComponent implements OnInit {\n\n    public cards: {\"title\": string, \"type\": string, \"content\": any, \"color\": string}[];\n    public card_table: {\"title\": string, \"type\": string, \"content\": any, \"color\": string, \"id\": number}[][];\n    public collumns: number;\n    public element: ElementRef;\n    private url = 'https://angularattack2016-sayodev.herokuapp.com/board/';\n    private data;\n    private getInfo(){\n        this.data = this.http.get(this.url + this.get_id(location.href) + \"/getinfo\")\n            .subscribe(\n                data => {\n                    this.cards = data.json().cards;\n                },\n                err => console.log(err.json().message),\n                () => console.log('Creating Complete')\n           );\n    }\n    constructor(myElement: ElementRef, private http: Http) {\n        this.cards = [];\n        \n        this.getInfo();\n\n        /* this.cards = [\n            {\"title\": \"Text!\",\"type\": \"text\",\"content\": \"Card Nr. 1\",\"color\":\"white\"},\n            {\"title\": \"Lorem Ipsum Text!\",\"type\": \"text\",\"content\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\"color\":\"white\"},\n            {\"title\": \"This is Google.\",\"type\": \"link\",\"content\": \"http://www.google.de\",\"color\":\"white\"},\n            {\"title\": \"This isnÂ´t Google.\",\"type\": \"link\",\"content\": \"http://www.angular.io/\",\"color\":\"white\"},\n            {\"title\": \"Want some more cards?\",\"type\": \"image\",\"content\": \"http://images.all-free-download.com/images/graphiclarge/check_mark_clip_art_11058.jpg\",\"color\":\"white\"},\n            {\"title\": \"It will happen at some point.\",\"type\": \"text\",\"content\": \"...\",\"color\":\"white\"},\n            {\"title\": \"Look at those colors!\",\"type\": \"text\",\"content\": \"...\",\"color\":\"white\"},\n            {\"title\": \"BrainShare\",\"type\": \"text\",\"content\": \"is cool.\",\"color\":\"green\"}\n        ]; */\n        this.collumns = 1;\n        this.element = myElement;\n    }\n    \n    get_id(x: string) : string {\n        let x2: string[] = x.split(\"/\");\n        if (x2[x2.length - 1] == \"\") {\n            return x2[x2.length - 2];\n        } else {\n            return x2[x2.length - 1];\n        }\n    }\n\n    ngOnInit() {\n        let this_component: CardCollectionComponent = this;\n        let rtime: number;\n        let timeout: boolean = false;\n        let delta: number = 300;\n\n        window.addEventListener(\"resize\", function() {\n            rtime = (new Date()).valueOf();\n            if (timeout === false) {\n                timeout = true;\n                setTimeout(resizeend, delta);\n            }\n        });\n\n        function resizeend() {\n            if ((new Date()).valueOf() - rtime < delta) {\n                setTimeout(resizeend, delta);\n            } else {\n                timeout = false;\n                this_component.reorderCards();\n            }\n        }\n\n        this.reorderCards();\n    }\n\n    reorderCards() {\n        let collumn_data: number[] = [];\n        if(window.matchMedia(\"(min-width: 8in)\").matches) {\n            this.collumns = 3;\n            this.card_table = [];\n            for (let i: number = 0; i < this.collumns; i++) {\n                this.card_table.push([]);\n            }\n            for (let i: number = 0; i < this.cards.length; i++) {\n                let current_card: {\"title\": string, \"type\": string, \"content\": any, \"color\": string} = this.cards[i];\n                this.card_table[0].push({\n                    \"title\": current_card.title,\n                    \"type\": current_card.type,\n                    \"content\": current_card.content,\n                    \"color\": current_card.color,\n                    \"id\": i\n                });\n            }\n            window.setTimeout(() => {\n                let collumn_data: number[] = [];\n                for (let i: number = 0; i < this.cards.length; i++) {\n                  collumn_data.push(0);\n                }\n                this.card_table[0] = [];\n                for (let i: number = 0; i < this.cards.length; i++) {\n                    let minimum: number = Infinity;\n                    let id: number = -1;\n                    let current_card: {\"title\": string, \"type\": string, \"content\": any, \"color\": string};\n                    for (let j: number = 0; j < 3; j++) {\n                        if (collumn_data[j] < minimum) {\n                            minimum = collumn_data[j];\n                            id = j;\n                        }\n                    }\n                    current_card = this.cards[i];\n                    this.card_table[id].push({\n                        \"title\": current_card.title,\n                        \"type\": current_card.type,\n                        \"content\": current_card.content,\n                        \"color\": current_card.color,\n                        \"id\": i\n                    });\n                    collumn_data[id] += 12 + this.element.nativeElement.querySelector('.app_card' + i.toString()).offsetHeight;\n                }\n            }, 100);\n        } else {\n            this.collumns = 1;\n        }\n    }\n\n    delete(index: number) {\n        this.cards.splice(index, 1);\n        this.reorderCards();\n    }\n\n}\n"]}