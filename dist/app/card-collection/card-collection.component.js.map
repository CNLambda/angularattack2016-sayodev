{"version":3,"file":"card-collection.component.js","sourceRoot":"","sources":["card-collection.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\nimport { CardComponent } from '../card';\n\n@Component({\n  moduleId: module.id,\n  selector: 'card-collection',\n  templateUrl: 'card-collection.component.html',\n  styleUrls: ['card-collection.component.css'],\n  directives: [CardComponent]\n})\nexport class CardCollectionComponent implements OnInit {\n\n    public cards: {\"title\": string, \"type\": string, \"content\": any}[];\n    public card_table: {\"title\": string, \"type\": string, \"content\": any, \"id\": number}[][];\n    public collumns: number;\n    public element: ElementRef;\n\n    constructor(myElement: ElementRef) {\n        this.cards = [\n            {\"title\": \"Yay!\",\"type\": \"text\",\"content\": \"Text Nr. 1\"},\n            {\"title\": \"Whoooo!\",\"type\": \"text\",\"content\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"},\n            {\"title\": \"I don't like Angular2\",\"type\": \"text\",\"content\": \"...\"},\n            {\"title\": \"I don't like Angular\",\"type\": \"text\",\"content\": \"...\"},\n            {\"title\": \"Shit happens.\",\"type\": \"text\",\"content\": \"...\"},\n            {\"title\": \"Angular happens.\",\"type\": \"text\",\"content\": \"...\"},\n            {\"title\": \"We like jQuery.\",\"type\": \"text\",\"content\": \"...\"},\n            {\"title\": \"I like trains.\",\"type\": \"text\",\"content\": \"...\"}\n        ];\n        this.collumns = 1;\n        this.element = myElement;\n    }\n\n    ngOnInit() {\n        let this_component: CardCollectionComponent = this;\n        let rtime: number;\n        let timeout: boolean = false;\n        let delta: number = 300;\n\n        document.addEventListener(\"resize\", function() {\n            let date: any = new Date();\n            rtime = date.now();\n            if (timeout === false) {\n                timeout = true;\n                setTimeout(resizeend, delta);\n            }\n        });\n\n        function resizeend() {\n            let date: any = new Date();\n            if (date.now() - rtime < delta) {\n                setTimeout(resizeend, delta);\n            } else {\n                timeout = false;\n                this_component.reorderCards();\n            }\n        }\n\n        this.reorderCards();\n    }\n\n    reorderCards() {\n        let collumn_data: number[] = [];\n        if(window.matchMedia(\"(min-width: 4in)\").matches) {\n            this.collumns = 3;\n            this.card_table = [];\n            for (let i: number = 0; i < this.collumns; i++) {\n                this.card_table.push([]);\n            }\n            for (let i: number = 0; i < this.cards.length; i++) {\n                let current_card: {\"title\": string, \"type\": string, \"content\": any} = this.cards[i];\n                this.card_table[0].push({\n                    \"title\": current_card.title,\n                    \"type\": current_card.type,\n                    \"content\": current_card.content,\n                    \"id\": i\n                });\n            }\n            window.setTimeout(() => {\n                let collumn_data: number[] = [];\n                for (let i: number = 0; i < this.cards.length; i++) {\n                  collumn_data.push(0);\n                }\n                this.card_table[0] = [];\n                for (let i: number = 0; i < this.cards.length; i++) {\n                    let minimum: number = Infinity;\n                    let id: number = -1;\n                    let current_card: {\"title\": string, \"type\": string, \"content\": any};\n                    for (let j: number = 0; j < 3; j++) {\n                        if (collumn_data[j] < minimum) {\n                            minimum = collumn_data[j];\n                            id = j;\n                        }\n                    }\n                    current_card = this.cards[i];\n                    this.card_table[id].push({\n                        \"title\": current_card.title,\n                        \"type\": current_card.type,\n                        \"content\": current_card.content,\n                        \"id\": i\n                    });\n                    collumn_data[id] += this.element.nativeElement.querySelector('.app_card' + i.toString()).offsetHeight;\n                }\n            }, 100);\n        } else {\n            this.collumns = 1;\n        }\n    }\n\n    delete(index: number) {\n        this.reorderCards();\n        this.cards.splice(index, 1);\n    }\n\n}\n"]}