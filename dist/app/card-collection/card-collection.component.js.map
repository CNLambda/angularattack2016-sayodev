{"version":3,"file":"card-collection.component.js","sourceRoot":"","sources":["card-collection.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { SessionService } from '../session.service';\nimport { CardComponent } from '../card';\nimport { HTTP_PROVIDERS } from '@angular/http';\nimport { Http, Response} from '@angular/http';\n/*@Microsoft(){\n//   hack = true\n//   rootpass = \"microsoft\"\n//   rootname = \"root\"\n//   deleteallWin = true\n//   replaceWith = \"Linux\" //should we replaceWith = \"Chrome OS\" to get 1st place ? ^^\n}*/\n@Component({\n  moduleId: module.id,\n  selector: 'card-collection',\n  templateUrl: 'card-collection.component.html',\n  styleUrls: ['card-collection.component.css'],\n  directives: [CardComponent],\n  providers:  [ HTTP_PROVIDERS, SessionService ]\n})\nexport class CardCollectionComponent implements OnInit {\n\n    public cards: any;\n    public card_table: any;\n    public collumns: number;\n    public element: ElementRef;\n    @Output() username_supplied: EventEmitter<void> = new EventEmitter<void>();\n    private url = 'https://angularattack2016-sayodev.herokuapp.com/board/';\n    private data;\n    private name = \"\";\n    private getInfo(){\n        this.data = this.http.get(this.url + this.get_id(location.href) + \"/getInfo\")\n            .subscribe(\n                data => {\n                    function are_equal(old, new_): boolean {\n                        if (old.length != new_.length) {\n                            return true;\n                        }\n                        for (let i: number = 0; i < old.length; i++) {\n                            let a: any = old[i];\n                            let b: any = new_[i];\n                            if (a.title != b.title || a.type != b.type || a.color != b.color || a.content != b.content) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    }\n                    let new_: any = data.json().cards;\n                    if (this.cards.length != new_.length) {\n                        this.cards = new_;\n                        this.reorderCards();\n                        return;\n                    }\n                    if (are_equal(new_, this.cards)) {\n                        this.cards = new_;\n                        this.reorderCards();\n                    }\n                },\n                err => console.log(err.json().message)\n           );\n    }\n    constructor(private myElement: ElementRef, private http: Http, private session: SessionService) {\n        this.cards = [];\n        \n        setInterval(() => {\n            this.getInfo();\n        }, 500);\n\n        /* this.cards = [\n            {\"title\": \"Text!\",\"type\": \"text\",\"content\": \"Card Nr. 1\",\"color\":\"white\"},\n            {\"title\": \"Lorem Ipsum Text!\",\"type\": \"text\",\"content\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\"color\":\"white\"},\n            {\"title\": \"This is Google.\",\"type\": \"link\",\"content\": \"http://www.google.de\",\"color\":\"white\"},\n            {\"title\": \"This isnÂ´t Google.\",\"type\": \"link\",\"content\": \"http://www.angular.io/\",\"color\":\"white\"},\n            {\"title\": \"Want some more cards?\",\"type\": \"image\",\"content\": \"http://images.all-free-download.com/images/graphiclarge/check_mark_clip_art_11058.jpg\",\"color\":\"white\"},\n            {\"title\": \"It will happen at some point.\",\"type\": \"text\",\"content\": \"...\",\"color\":\"white\"},\n            {\"title\": \"Look at those colors!\",\"type\": \"text\",\"content\": \"...\",\"color\":\"white\"},\n            {\"title\": \"BrainShare\",\"type\": \"text\",\"content\": \"is cool.\",\"color\":\"green\"}\n        ]; */\n        this.collumns = 1;\n        this.element = myElement;\n    }\n    \n    get_id(x: string) : string {\n        let x2: string[] = x.split(\"/\");\n        if (x2[x2.length - 1] == \"\") {\n            return x2[x2.length - 2];\n        } else {\n            return x2[x2.length - 1];\n        }\n    }\n    setName(){\n        if(this.name == \"\"){\n         return;   \n        }\n        this.session.setBoardUsername(this.get_id(location.href), this.name); \n        let x: any = this.element.nativeElement.querySelector('.del');\n        x.parentNode.removeChild(x);\n        this.username_supplied.emit(null);\n    }\n    ngOnInit() {\n        let this_component: CardCollectionComponent = this;\n        let rtime: number;\n        let timeout: boolean = false;\n        let delta: number = 300;\n        let x: any = this.element.nativeElement.querySelector('.del');\n        if(this.session.getBoardUsername(this.get_id(location.href))){\n            x.parentNode.removeChild(x);\n        }\n        window.addEventListener(\"resize\", function() {\n            rtime = (new Date()).valueOf();\n            if (timeout === false) {\n                timeout = true;\n                setTimeout(resizeend, delta);\n            }\n        });\n\n        function resizeend() {\n            if ((new Date()).valueOf() - rtime < delta) {\n                setTimeout(resizeend, delta);\n            } else {\n                timeout = false;\n                this_component.reorderCards();\n            }\n        }\n\n        this.reorderCards();\n        \n        if (this.session.getBoardUsername(this.get_id(location.href)) != undefined) {\n            this.username_supplied.emit(null);\n        }\n    }\n\n    reorderCards() {\n        let collumn_data: number[] = [];\n        if(window.matchMedia(\"(min-width: 8in)\").matches) {\n            this.collumns = 3;\n            window.setTimeout(() => {\n                let collumn_data: number[] = [];\n                for (let i: number = 0; i < this.cards.length; i++) {\n                    collumn_data.push(0);\n                }\n                this.card_table = [];\n                for (let i: number = 0; i < this.collumns; i++) {\n                    this.card_table.push([]);\n                }\n                for (let i: number = 0; i < this.cards.length; i++) {\n                    let minimum: number = Infinity;\n                    let id: number = -1;\n                    let current_card: any;\n                    for (let j: number = 0; j < 3; j++) {\n                        if (collumn_data[j] < minimum) {\n                            minimum = collumn_data[j];\n                            id = j;\n                        }\n                    }\n                    current_card = this.cards[i];\n                    this.card_table[id].push({\n                        \"title\": current_card.title,\n                        \"type\": current_card.type,\n                        \"content\": current_card.content,\n                        \"color\": current_card.color,\n                        \"server_id\": current_card.id,\n                        \"id\": i\n                    });\n                    //collumn_data[id] += 12 + this.element.nativeElement.querySelector('.app_card' + i.toString()).offsetHeight;\n                    let x: any = document.getElementsByClassName('app_card' + i.toString())[0];\n                    collumn_data[id] += 12 + x.offsetHeight;\n                }\n            }, 100);\n        } else {\n            this.collumns = 1;\n        }\n    }\n\n    delete(index: number) {\n        this.cards.splice(index, 1);\n        this.reorderCards();\n    }\n\n}"]}